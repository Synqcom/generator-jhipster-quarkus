<%#
 Copyright 2020-2021 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
    <%_ if (hasPagination) { _%>
    /**
     * Get all the <%= entityInstancePlural %>.
     * @param page the pagination information.
     * @return the list of entities.
     */
    <%_ if (hasServiceImpl) { _%>
    @Override
    <%_ } _%>
    <%_ if (databaseType === 'sql' && isUsingMapsId === true) { _%>
    @Transactional(readOnly = true)
    <%_ } _%>
    public Paged<<%= entityOrDtoClass %>> findAllByCriteria(<%= entityClass %>Criteria <%= entityInstance %>Criteria, Page page, Sort sort) {
        log.debug("Request to get all <%= entityClassPlural %>");
        CriteriaQuery<<%= entityClass %>> criteriaQuery = createSelectCriteriaQuery(<%= entityInstance %>Criteria, sort);
        CriteriaQuery<Long> countQuery = createCountCriteriaQuery(<%= entityInstance %>Criteria);
        Long totalCount = entityManager.createQuery(countQuery).getSingleResult();
        final TypedQuery<<%= entityClass %>> query = entityManager.createQuery(criteriaQuery).setFirstResult(page.index * page.size).setMaxResults(page.size);
        List<<%= entityOrDtoClass %>> resultList = <% if (hasDto) { %><%= mapper %>.toDto(<% } %>query.getResultList()<% if (hasDto) { %>)<% } %>;
        return new Paged<>(page.index, page.size, totalCount, (long) Math.ceil(((double) totalCount) / page.size), resultList);
    }

    <%_ } _%>
    /**
     * Get all the <%= entityInstancePlural %>.
     * @return the list of entities.
     */
    <%_ if (hasServiceImpl) { _%>
    @Override
    <%_ } _%>
    <%_ if (databaseType === 'sql' && isUsingMapsId === true) { _%>
    @Transactional(readOnly = true)
    <%_ } _%>
    public List<<%= entityOrDtoClass %>> findAllByCriteria(<%= entityClass %>Criteria <%= entityInstance %>Criteria, Sort sort) {
        log.debug("Request to get all <%= entityClassPlural %>");
        CriteriaQuery<<%= entityClass %>> criteriaQuery = createSelectCriteriaQuery(<%= entityInstance %>Criteria, sort);
        final TypedQuery<<%= entityClass %>> query = entityManager.createQuery(criteriaQuery);
        List<<%= entityOrDtoClass %>> resultList = <% if (hasDto) { %><%= mapper %>.toDto(<% } %>query.getResultList()<% if (hasDto) { %>)<% } %>;
        return resultList;
    }
